{"version":3,"sources":["components/Pokemon.js","components/PokeList.js","components/PokeDetail.js","components/Filter.js","data/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Pokemon","props","state","name","url","type","id","species","evolution","fetch","this","then","response","json","info","setState","sprites","front_default","types","data","evolves_from_species","evolutionClass","typesList","map","item","index","className","num","src","alt","React","Component","defaultProps","PokeList","cardList","to","PokeDetail","image","image_back","height","weight","abilities","evolve_to1","evolve_to2","evolve_to3","back_default","evolution_chain","evol","evol3","undefined","chain","evolves_to","moves","ability","evol3_condition","href","Filter","onChange","ev","handleInput","currentTarget","value","placeholder","searchValue","defaultValue","apiCall","App","apiData","bind","filteredData","renderPokeDetail","results","filter","toLowerCase","includes","pokeDetailName","match","params","pokeDetail","find","exact","path","length","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.324ed326.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styleSheets/Pokemon.scss\";\nimport PropTypes from \"prop-types\";\n\nclass Pokemon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      url: \"\",\n      type: [],\n      id: 0,\n      species: \"\",\n      evolution: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.url)\n      .then((response) => response.json())\n      .then((info) =>\n        this.setState({\n          name: info.name,\n          url: info.sprites.front_default,\n          type: info.types,\n          id: info.id,\n          species: info.species.url,\n        })\n      )\n      .then(() =>\n        fetch(this.state.species)\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.evolves_from_species !== null) {\n              this.setState({ evolution: data.evolves_from_species.name });\n            }\n          })\n      );\n  }\n  render() {\n    const { url, name, type, id, evolution } = this.state;\n    const evolutionClass = evolution !== \"\" ? `Evoluciona de ${evolution}` : \"\";\n    const typesList = type.map((item, index) => (\n      <li key={index} className=\"list\">\n        {item.type.name}\n      </li>\n    ));\n    return (\n      <div className=\"poke-card\">\n        <p className=\"number\">{`${this.props.num}/${id}`}</p>\n        <img src={url} alt={name} className=\"poke-image\" />\n        <div className=\"text-container\">\n          <h2 className=\"poke-name\">{name}</h2>\n          <div className=\"evolution-container\">\n            <ul className=\"type-list\">{typesList}</ul>\n            <p className=\"evolution\">{evolutionClass}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPokemon.propTypes = {\n  num: PropTypes.number.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nPokemon.defaultProps = {\n  url: \"../images/default-img.png\",\n  name: \"En construcciÃ³n\",\n};\nexport default Pokemon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styleSheets/PokeList.scss\";\nimport Pokemon from \"./Pokemon\";\nimport { Link } from \"react-router-dom\";\n\nclass PokeList extends React.Component {\n  render() {\n    const cardList = this.props.data.map((item) => (\n      <Link className=\"link\" to={`/${item.name}`}>\n        <li key={item.name} className=\"list\">\n          <Pokemon name={item.name} url={item.url} num={this.props.num} />\n        </li>\n      </Link>\n    ));\n    return <ul className=\"cards-list\">{cardList}</ul>;\n  }\n}\n\nPokeList.propTypes = {\n  data: PropTypes.array.isRequired,\n  num: PropTypes.number.isRequired,\n};\n\nexport default PokeList;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styleSheets/PokeDetail.scss\";\nimport { Link } from \"react-router-dom\";\n\nclass PokeDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      image: \"\",\n      image_back: \"\",\n      height: 0,\n      weight: 0,\n      evolution: \"\",\n      abilities: [],\n      species: \"\",\n      evolve_to1: \"\",\n      evolve_to2: \"\",\n      evolve_to3: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(this.props.url)\n      .then((response) => response.json())\n      .then((info) =>\n        this.setState({\n          name: info.name,\n          image: info.sprites.front_default,\n          image_back: info.sprites.back_default,\n          height: info.height,\n          weight: info.weight,\n          abilities: info.abilities,\n          species: info.species.url,\n        })\n      )\n      .then(() =>\n        fetch(this.state.species)\n          .then((response) => response.json())\n          .then((data) => {\n            this.setState({ evolution: data.evolution_chain.url });\n          })\n      )\n      .then(() =>\n        fetch(this.state.evolution)\n          .then((response) => response.json())\n          .then((evol) => {\n            let evol3 =\n              evol.chain.evolves_to[0].evolves_to[0] !== undefined\n                ? evol.chain.evolves_to[0].evolves_to[0].species.name\n                : \"\";\n            this.setState({\n              evolve_to1: evol.chain.species.name,\n              evolve_to2: evol.chain.evolves_to[0].species.name,\n              evolve_to3: evol3,\n            });\n          })\n      );\n  }\n  render() {\n    const {\n      image,\n      image_back,\n      height,\n      weight,\n      abilities,\n      evolve_to1,\n      evolve_to2,\n      evolve_to3,\n    } = this.state;\n    const moves = abilities.map((item) => \" \" + item.ability.name);\n    let evol3_condition =\n      evolve_to3 !== \"\" ? `, el cual evoluciona a ${evolve_to3}` : \"\";\n    return (\n      <>\n        <article className=\"detail\">\n          <div>\n            <img\n              className=\"detail__image\"\n              src={image}\n              alt={this.props.name}\n              className=\"detail__image\"\n            />\n            <img\n              src={image_back}\n              alt={this.props.name}\n              className=\"detail__image\"\n            />\n          </div>\n          <div>\n            <h2 className=\"detail__name\">{`Nombre: ${this.props.name}`}</h2>\n            <p className=\"detail__height\">\n              <b>Altura:</b>\n              {` ${height} m`}\n            </p>\n            <p className=\"detail__weight\">\n              <b>Peso:</b>\n              {` ${weight} kg`}\n            </p>\n            <p className=\"detail__abilities\">\n              <b>Habilidades:</b>\n              {` ${moves}`}\n            </p>\n            <p className=\"detail__evolution\">\n              <b>Evoluciones:</b>\n              {` ${evolve_to1} evoluciona a ${evolve_to2}${evol3_condition}`}\n            </p>\n          </div>\n        </article>\n        <div className=\"btn-container\">\n          <Link className=\"link\" to=\"/\">\n            <a href=\"\" className=\"detail__btn link\">\n              Volver\n            </a>\n          </Link>\n        </div>\n      </>\n    );\n  }\n}\nPokeDetail.propTypes = {\n  name: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\nexport default PokeDetail;\n","import \"../styleSheets/Filter.scss\";\nimport PropTypes from \"prop-types\";\nconst Filter = (props) => {\n  const handleInput = (ev) => {\n    props.handleInput(ev.currentTarget.value);\n  };\n  return (\n    <form className=\"main__form\">\n      <input\n        onChange={handleInput}\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        className=\"main__form-input\"\n        placeholder=\"Filtra pokemons por nombre\"\n        value={props.searchValue}\n        defaultValue=\"Pikachu\"\n      />\n    </form>\n  );\n};\nFilter.propTypes = {\n  handleInput: PropTypes.func.isRequired,\n  searchValue: PropTypes.string.isRequired,\n};\nexport default Filter;\n","\"use strict\";\n\nconst apiUrl = \"https://pokeapi.co/api/v2/pokemon?limit=25&offset=0\";\n\nconst apiCall = () => {\n  return fetch(apiUrl).then((response) => response.json());\n};\n\nexport default apiCall;\n","import \"../styleSheets/App.scss\";\nimport React from \"react\";\nimport PokeList from \"./PokeList\";\nimport PokeDetail from \"./PokeDetail\";\nimport Filter from \"./Filter\";\nimport apiCall from \"../data/api\";\nimport { Route, Switch } from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiData: [],\n      searchValue: \"\",\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.filteredData = this.filteredData.bind(this);\n    this.renderPokeDetail = this.renderPokeDetail.bind(this);\n  }\n  componentDidMount() {\n    apiCall().then((data) => {\n      this.setState({\n        apiData: data.results,\n      });\n    });\n  }\n  //Events\n  handleInput(data) {\n    this.setState({\n      searchValue: data,\n    });\n  }\n  //Render\n  filteredData() {\n    const filteredPokemon = this.state.apiData.filter((item) =>\n      item.name.toLowerCase().includes(this.state.searchValue.toLowerCase())\n    );\n    return filteredPokemon;\n  }\n  renderPokeDetail(props) {\n    const pokeDetailName = props.match.params.name;\n    const pokeDetail = this.state.apiData.find(\n      (item) => item.name === pokeDetailName\n    );\n    if (pokeDetail) {\n      return <PokeDetail name={pokeDetail.name} url={pokeDetail.url} />;\n    }\n    // else {\n    //   return <NotFound />;\n    // }\n  }\n\n  render() {\n    const { searchValue, apiData } = this.state;\n    return (\n      <div className=\"container\">\n        <header>\n          <h1 className=\"title\">Â¡Hazte con todos!</h1>\n        </header>\n        <main>\n          <Switch>\n            <Route exact path=\"/\">\n              <Filter\n                handleInput={this.handleInput}\n                searchValue={searchValue}\n              />\n              <PokeList\n                data={this.filteredData()}\n                searchValue={searchValue}\n                num={apiData.length}\n              />\n            </Route>\n            <Route path=\"/:name\" render={this.renderPokeDetail} />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styleSheets/index.scss\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}